/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import constants.usuarioConst;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.categoriaDatos;
import model.categoriaModel;
import model.inventarioDatos;
import model.inventarioModel;
import model.rolDatos;
import model.rolModel;
import model.usuarioDatos;
import model.usuarioModel;

/**
 *
 * @author mlang
 */
public class moduloControUsuario extends javax.swing.JInternalFrame {

    /**
     * Creates new form moduloControUsuario
     */
    //Variable para guardar el dato obtenido de las categorias
    private ArrayList<Object> roles = new ArrayList();

    //ArrayList para almacenar los datos de la consulta
    ArrayList<Object[]> data = new ArrayList<>();
    ArrayList<Object[]> data1 = new ArrayList<>();

    //Creando instancias de modelo y datos
    usuarioModel model = new usuarioModel();
    usuarioModel model1 = new usuarioModel();
    rolModel model2 = new rolModel();
    usuarioDatos datos = new usuarioDatos();
    rolDatos datos1 = new rolDatos();

    //Creando el modelo de la tabla
    DefaultTableModel tableModel = new DefaultTableModel();

    //Variable para guardar el Id
    private String Id = "";

    public moduloControUsuario() {
        initComponents();
        setTitle("Control de Usuario");
        //Asignando valores a los atributos
        model.setOPCION(0);
        model.setPK_TBL_PMK_CONTROL_USUARIO(0);
        model.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);
        model.setCEDULA("");
        model.setNOMBRE("");
        model.setCONTRASENA("");
        model.setAPELLIDO1("");

        //Guardando los datos en la arraylist
        data = datos.obtenerDatos(model);

        //Añadiendo las columnas a la tabla
        tableModel.addColumn("ID");
        tableModel.addColumn("CEDULA");
        tableModel.addColumn("NOMBRE");
        tableModel.addColumn("APELLIDO1");
        tableModel.addColumn("APELLIDO2");
        tableModel.addColumn("CONTRASEÑA");
        tableModel.addColumn("ROL");

        //Leyendo los datos por medio de un for each
        for (Object[] fila : data) {
            tableModel.addRow(fila);
        }

        //Agregando los datos a la tabla
        tblUsuario.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        txtApellido2 = new javax.swing.JTextField();
        txtApellido1 = new javax.swing.JTextField();
        txtContraseña = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuario = new javax.swing.JTable();
        txtRol = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Control de Usuario");
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/user (1).png"))); // NOI18N

        jLabel1.setText("jLabel1");

        jPanel1.setBackground(new java.awt.Color(198, 216, 211));

        txtNombre.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtNombre.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Nombre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 1, 14))); // NOI18N

        txtApellido2.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtApellido2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Apellido 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 1, 14))); // NOI18N

        txtApellido1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtApellido1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Apellido 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 1, 14))); // NOI18N

        txtContraseña.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtContraseña.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Contraseña", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 1, 14))); // NOI18N

        txtCedula.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Cedula", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 1, 14))); // NOI18N

        btnAgregar.setBackground(new java.awt.Color(234, 234, 234));
        btnAgregar.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/plus.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(234, 234, 234));
        btnModificar.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pencil.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(234, 234, 234));
        btnEliminar.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/trash.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(234, 234, 234));
        btnBuscar.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/search.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUsuario.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuario);

        txtRol.setEditable(false);
        txtRol.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtRol.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Rol", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 1, 14))); // NOI18N
        txtRol.setPreferredSize(new java.awt.Dimension(77, 39));
        txtRol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtRolMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtRol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(btnAgregar)
                        .addGap(33, 33, 33)
                        .addComponent(btnModificar)
                        .addGap(40, 40, 40)
                        .addComponent(btnEliminar)
                        .addGap(28, 28, 28)
                        .addComponent(btnBuscar)
                        .addGap(25, 25, 25))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnEliminar)
                    .addComponent(btnModificar)
                    .addComponent(btnAgregar))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        //Atributos
        model.setOPCION(0);
        model.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);

        //Condicional para validar si el campo id tiene un valor
        if (!Id.equals("")) {
            model.setPK_TBL_PMK_CONTROL_USUARIO(Integer.parseInt(Id));
        } else {
            model.setPK_TBL_PMK_CONTROL_USUARIO(0);
        }

        model.setCEDULA(txtCedula.getText().toUpperCase());
        model.setNOMBRE(txtNombre.getText().toUpperCase());
        model.setAPELLIDO1(txtApellido1.getText().toUpperCase());
        model.setAPELLIDO2(txtApellido2.getText());
        model.setCONTRASENA(txtContraseña.getText());
        model.setID_ROLL(Integer.parseInt(roles.get(0).toString()));

        //Condicional para saber si se hizo la transaccion
        if (datos.ingresar(model)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();

            model1.setOPCION(0);
            model1.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);
            model1.setPK_TBL_PMK_CONTROL_USUARIO(0);
            model1.setCEDULA("");
            model1.setNOMBRE("");
            model1.setAPELLIDO1("");
            model1.setCONTRASENA("");

            data = null;
            tableModel.setRowCount(0);

            data = datos.obtenerDatos(model1);

            for (Object[] fila : data) {
                tableModel.addRow(fila);
            }

            //Agregando los datos a la tabla
            tblUsuario.setModel(tableModel);
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        //Atributos
        model.setOPCION(0);
        model.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);

        //Condicional para validar si el campo id tiene un valor
        if (!Id.equals("")) {
            model.setPK_TBL_PMK_CONTROL_USUARIO(Integer.parseInt(Id));
        } else {
            model.setPK_TBL_PMK_CONTROL_USUARIO(0);
        }

        model2.setOPCION(0);
        model2.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);
        model2.setPK_TBL_PMK_ROL(0);
        model2.setROL(txtRol.getText());

        data1 = datos1.obtenerDatos(model2);

        model.setCEDULA(txtCedula.getText().toUpperCase());
        model.setNOMBRE(txtNombre.getText().toUpperCase());
        model.setAPELLIDO1(txtApellido1.getText().toUpperCase());
        model.setAPELLIDO2(txtApellido2.getText());
        model.setCONTRASENA(txtContraseña.getText());
        model.setID_ROLL(Integer.parseInt(data1.get(0)[0].toString()));

        //Condicional para saber si se hizo la transaccion
        if (datos.modificar(model)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();

            model1.setOPCION(0);
            model1.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);
            model1.setPK_TBL_PMK_CONTROL_USUARIO(0);
            model1.setCEDULA("");
            model1.setNOMBRE("");
            model1.setAPELLIDO1("");
            model1.setCONTRASENA("");

            data = null;
            tableModel.setRowCount(0);

            data = datos.obtenerDatos(model1);

            for (Object[] fila : data) {
                tableModel.addRow(fila);
            }

            //Agregando los datos a la tabla
            tblUsuario.setModel(tableModel);
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        //Atributos
        model.setOPCION(1);
        model.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);

        //Condicional para validar si el campo id tiene un valor
        if (!Id.equals("")) {
            model.setPK_TBL_PMK_CONTROL_USUARIO(Integer.parseInt(Id));
        } else {
            model.setPK_TBL_PMK_CONTROL_USUARIO(0);
        }

        model.setCEDULA(txtCedula.getText().toUpperCase());
        model.setNOMBRE(txtNombre.getText().toUpperCase());
        model.setAPELLIDO1(txtApellido1.getText().toUpperCase());
        model.setAPELLIDO2(txtApellido2.getText());
        model.setCONTRASENA(txtContraseña.getText());
        model.setID_ROLL(Integer.parseInt(roles.get(0).toString()));

        //Condicional para saber si se hizo la transaccion
        if (datos.eliminar(model)) {
            JOptionPane.showMessageDialog(null, "Eliminado con exito");
            limpiar();

            model1.setOPCION(0);
            model1.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);
            model1.setPK_TBL_PMK_CONTROL_USUARIO(0);
            model1.setCEDULA("");
            model1.setNOMBRE("");
            model1.setAPELLIDO1("");
            model1.setCONTRASENA("");

            data = null;
            tableModel.setRowCount(0);

            data = datos.obtenerDatos(model1);

            for (Object[] fila : data) {
                tableModel.addRow(fila);
            }

            //Agregando los datos a la tabla
            tblUsuario.setModel(tableModel);
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar");
            limpiar();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        model.setOPCION(0);
        model.setUSUARIO(usuarioConst.nombre + "." + usuarioConst.apellido);

        //JOptionPane para saber el tipo de dato que desea buscar
        Object buscar = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Id", "Cedula", "Nombre", "Apellido1"}, "Seleccione");

        //Variable para almacenar el dato
        String valor = JOptionPane.showInputDialog("Ingrese " + buscar + " para buscar: ");

        //Condicional para buscar por el tipo de dato elegido
        switch (buscar.toString()) {
            case "Id":
                //Atributos

                model.setPK_TBL_PMK_CONTROL_USUARIO(Integer.parseInt(valor));

                model.setCEDULA("");
                model.setNOMBRE("");
                model.setCONTRASENA("");
                model.setAPELLIDO1("");

                data = null;
                tableModel.setRowCount(0);

                data = datos.obtenerDatos(model);

                for (Object[] fila : data) {
                    tableModel.addRow(fila);
                }

                //Agregando los datos a la tabla
                tblUsuario.setModel(tableModel);
                break;
            case "Cedula":
                //Atributos
                model.setPK_TBL_PMK_CONTROL_USUARIO(0);

                model.setCEDULA(valor);
                model.setNOMBRE("");
                model.setCONTRASENA("");
                model.setAPELLIDO1("");

                data = null;
                tableModel.setRowCount(0);

                data = datos.obtenerDatos(model);

                for (Object[] fila : data) {
                    tableModel.addRow(fila);
                }

                //Agregando los datos a la tabla
                tblUsuario.setModel(tableModel);
                break;
            case "Nombre":
                //Atributos
                model.setPK_TBL_PMK_CONTROL_USUARIO(0);

                model.setCEDULA("");
                model.setNOMBRE(valor);
                model.setCONTRASENA("");
                model.setAPELLIDO1("");

                data = null;
                tableModel.setRowCount(0);

                data = datos.obtenerDatos(model);

                for (Object[] fila : data) {
                    tableModel.addRow(fila);
                }

                //Agregando los datos a la tabla
                tblUsuario.setModel(tableModel);
                break;
            case "Apellido1":
                //Atributos
                model.setPK_TBL_PMK_CONTROL_USUARIO(0);

                model.setCEDULA("");
                model.setNOMBRE("");
                model.setCONTRASENA("");
                model.setAPELLIDO1(valor);

                data = null;
                tableModel.setRowCount(0);

                data = datos.obtenerDatos(model);

                for (Object[] fila : data) {
                    tableModel.addRow(fila);
                }

                //Agregando los datos a la tabla
                tblUsuario.setModel(tableModel);
                break;

            default:
                JOptionPane.showMessageDialog(null, "No es una opcion valida");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuarioMouseClicked
        //Obtiene la posicion donde se hizo el click
        int filaSeleccionada = tblUsuario.getSelectedRow();
        //Se realiza una condicional para determinar si la fila seleccionada es mayor o igual a 0
        if (filaSeleccionada >= 0) {
            //Se crea una instacia de ArrayList
            ArrayList<Object> datosFila = new ArrayList<>();
            //Se empieza a recorrer la tabla para obtener los valores de la fila seleccionada
            for (int i = 0; i < tableModel.getColumnCount(); i++) {
                datosFila.add(tableModel.getValueAt(filaSeleccionada, i));
            }

            //Agregan los datos a los textfield
            Id = datosFila.get(0).toString();
            txtCedula.setText(datosFila.get(1).toString());
            txtNombre.setText(datosFila.get(2).toString());
            txtApellido1.setText(datosFila.get(3).toString());
            txtApellido2.setText(datosFila.get(4).toString());
            txtContraseña.setText(datosFila.get(5).toString());
            txtRol.setText(datosFila.get(6).toString());
        }
    }//GEN-LAST:event_tblUsuarioMouseClicked

    private void txtRolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRolMouseClicked
        //Creamos una instancia del modal
        RolForm fm = new RolForm(this, true);
        //Colocamos el modal en media pantalla
        fm.setLocationRelativeTo(null);
        //Mostramos el modal
        fm.setVisible(true);
        //Guardamos el valor obtenido
        roles = fm.obtenerValor();

        //Validamos si categorias no es null
        if (roles != null) {
            //Asignamos valor al txtCategoria
            txtRol.setText(roles.get(1).toString());

        }
    }//GEN-LAST:event_txtRolMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUsuario;
    private javax.swing.JTextField txtApellido1;
    private javax.swing.JTextField txtApellido2;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtContraseña;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRol;
    // End of variables declaration//GEN-END:variables
private void limpiar() {
        Id = "";
        txtCedula.setText("");
        txtNombre.setText("");
        txtApellido1.setText("");
        txtApellido2.setText("");
        txtContraseña.setText("");
        txtRol.setText("");
    }
}
